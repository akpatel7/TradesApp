@model PagedList.IPagedList<TradesWebApplication.DAL.EFModels.Trade>
@using PagedList.Mvc;
@using TradesWebApplication.DAL.EFModels
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Trades List";
}

<h2>Trades List</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Trade", FormMethod.Get))
{
    <p>
        Find by ID: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th></th>
        <th>
            @*@Html.DisplayNameFor(model => model.trade_uri)*@
            @Html.ActionLink("Id", "Index", new { sortOrder = ViewBag.TradeIdSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
          <th>
            Service
        </th>
        <th>
            Trade Uri
        </th>
        <th>
            Trade Label
        </th>
        <th>
            Editorial Label
        </th>
        <th>
            Created On
        </th>
        <th>
            Created By
        </th>
        <th>
            @Html.ActionLink("Last Updated", "Index", new { sortOrder = ViewBag.LastUpdatedSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.trade_id }) | 
                @Html.ActionLink("Details", "Details", new { id = item.trade_id }) | 
                 @Html.ActionLink("APITest", "APITest", new { id = item.trade_id })                                                                     @*|*@
                @*@Html.ActionLink("Delete", "Delete", new { id = item.trade_id })*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.trade_id)
            </td>
             <td>
                 @Html.DisplayFor(modelItem => item.Service.service_code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.trade_uri)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.trade_label)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.trade_editorial_label)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.created_on)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.created_by)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.last_updated)
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
