@model TradesWebApplication.ViewModels.TradesCreationViewModel
@using Newtonsoft.Json
@{
    ViewBag.Title = "Trade Details";
}
 
<h2>Trade Details</h2>

<div>
    <table id="main_trade_table">
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.service_id)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Trade.service_id, new SelectList(Model.Services, "service_id", "service_code"), new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.service_id)
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.length_type_id)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Trade.length_type_id, new SelectList(Model.LengthTypes, "length_type_id", "length_type_label"), new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.length_type_id)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.relativity_id)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Trade.relativity_id, new SelectList(Model.Relativitys, "relativity_id", "relativity_label"), new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.relativity_id)
                </div>
            </td>
        </tr>
        <tr id="benchmark_selection">
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.benchmark_id)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Trade.benchmark_id, new SelectList(Model.Benchmarks, "benchmark_id", "benchmark_label"), new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.benchmark_id)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.created_on)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Trade.created_on, new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.created_on)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.trade_label)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Trade.trade_label, new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.trade_label)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.trade_editorial_label)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Trade.trade_editorial_label, new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.trade_editorial_label)
                </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.structure_type_id)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Trade.structure_type_id, new SelectList(Model.StructureTypes, "structure_type_id", "structure_type_label"), new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.structure_type_id)
                </div>
            </td>
        </tr>
    </table>
    
    <div id="update-tradeLineGroups">
        @*data-bind="foreach: tradeLineGroups">*@
        @*<input type="hidden" name="line_group_count" data-bind="value: $index()" />*@
                    @{int i = 1;}
                    @foreach (var itemGroup in Model.TradeLineGroups)
                    {
                        <fieldset class="tgroup">
                            <legend class="trade_group">Group @Html.Raw(i) - @Html.Raw(itemGroup.TradeLineGroup.trade_line_group_id) </legend>
                            <table>
                                <thead>
                                    <tr>
                                        <th>Group Information</th>
                                        <th>Trade Line(s)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>

                                            @Html.LabelFor(modelItem => itemGroup.TradeLineGroupType)
<br />
            
                                            @Html.DropDownListFor(modelItem => itemGroup.TradeLineGroupType.trade_line_group_type_id, new SelectList(itemGroup.TradeLineGroupTypes, "trade_line_group_type_id", "trade_line_group_type_label"), itemGroup.TradeLineGroupType.trade_line_group_type_label, new {@disabled="disabled"})
                                           
                                            <br />
                                            @Html.LabelFor(modelItem => itemGroup.EditorialLabel)
<br />

                                            @Html.TextBoxFor(modelItem => itemGroup.EditorialLabel, new {@disabled="disabled"})
                                            <br />
                                            @Html.LabelFor(modelItem => itemGroup.CanonicalLabel)
<br />
                                            @Html.TextBoxFor(modelItem => itemGroup.CanonicalLabel, new {@disabled="disabled"})
<br />

                                        </td>
                                        <td>
                                            <table>
                                                <thead>
                                                    <tr>
                                                        <th>Order</th>
                                                        <th>LineID</th>
                                                        <th>Position</th>
                                                        <th>Financial Instrument</th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @{ int j = 1;
                                                    }
                                                    @foreach (var lineItem in Model.TradeLines.Where(item=> item.TradeLine.trade_line_group_id == itemGroup.TradeLineGroup.trade_line_group_id))
                                                    {
                                                        <tr>
                                                            <td>@Html.Raw(j)</td>
                                                            <td>@Html.DisplayFor(modelItem => lineItem.TradeLine.trade_line_id)</td>
                                                            <td>@Html.DropDownListFor(modelItem => lineItem.Position.position_id, new SelectList(lineItem.Positions, "position_id", "position_label"), lineItem.Position.position_label, new {@disabled="disabled"})
                                                                @*@Html.DisplayFor(modelItem => lineItem.Position.position_label)*@
                                                            </td>
                                                            <td>@Html.DropDownListFor(modelItem => lineItem.TradeTradableThing.tradable_thing_id, new SelectList(lineItem.TradeTradableThings, "tradable_thing_id", "tradable_thing_label"), lineItem.TradeTradableThing.tradable_thing_label, new {@disabled="disabled"})
                                                                @*@Html.DisplayFor(modelItem => lineItem.TradeTradableThing.tradable_thing_label)*@
                                                            </td>
                                                        </tr>
                                                        j++;
                                                    }
                                                </tbody>                                   
                                            </table>
                                        </td>
                                    </tr>
                   
                                </tbody>
                            </table>
                        </fieldset>
                        i++;
                    }
    </div>
    <!-- instructions ------------------------------------- -->
    <fieldset class="tgroup">
        <legend class="trade_group">Instructions</legend>
    <table>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.instruction_entry)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.instruction_entry, new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.instruction_entry)
                </div>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.instruction_entry_date)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.instruction_entry_date, new {@disabled="disabled"})
                    @Html.ValidationMessageFor(model => model.instruction_entry_date)
                </div>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.instruction_exit)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.instruction_exit, new {@disabled="disabled"})
                </div>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.instruction_exit_date)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.instruction_exit_date, new {@disabled="disabled"})
                </div>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.instruction_type_id)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.instruction_type_id, new SelectList(Model.InstructionTypes, "instruction_type_id", "instruction_type_label"), new {@disabled="disabled"})
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.instruction_label, new {@disabled="disabled"})
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.hedge_id)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.hedge_id, new SelectList(Model.HedgeTypes, "hedge_id", "hedge_label"), new {@disabled="disabled"})
                </div>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.currency_id)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.currency_id, new SelectList(Model.Currencies, "currency_id", "currency_label"), String.Empty, new {@disabled="disabled"})
                </div>
            </td>
            <td></td>
        </tr>
    </table>
 </fieldset>
</div>
 <!-- supplementary info ------------------------------------- -->
<fieldset class="tgroup">
    <legend class="trade_group">Supplementary Information</legend>
    <table>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.related_trade_ids)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.related_trade_ids, new SelectList(Model.RelatedTrades, "trade_id", "related_trade_id"), String.Empty, new {@disabled="disabled"} )
                </div>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.apl_func)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.apl_func, new {@disabled="disabled"})
                </div>
            </td>
            <td></td>
        </tr>
    </table>
</fieldset>
<!-- FX Spot and Carry ------------------------------------- -->
<fieldset class="tgroup">
    <legend class="trade_group">FX Spot and Carry</legend>
    <table>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.mark_to_mark_rate)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.mark_to_mark_rate, new {@disabled="disabled"})
                </div>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.interest_rate_diff)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.interest_rate_diff, new {@disabled="disabled"})
                </div>
            </td>
            <td></td>
        </tr>
    </table>
</fieldset>

<!-- Abs performance ------------------------------------- -->
<fieldset class="tgroup">
    <legend class="trade_group">Absolute Performance</legend>
    <table>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.abs_measure_type_id)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.abs_measure_type_id, new SelectList(Model.MeasureTypes, "measure_type_id", "measure_type_label"), new {@disabled="disabled"})
                    @Html.DropDownListFor(model => model.abs_currency_id, new SelectList(Model.Currencies, "currency_id", "currency_label"), String.Empty, new {@disabled="disabled"})
                    @Html.TextBoxFor(model => model.abs_return_value, new {@disabled="disabled"})
                </div>
            </td>
        </tr>
    </table>
</fieldset>

<!-- Rel performance ------------------------------------- -->
<fieldset class="tgroup">
    <legend class="trade_group">Relative Performance</legend>
    <table>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.rel_measure_type_id)
                </div>

            </td>
            <td>
                <div class="editor-field disabled">
                    @Html.DropDownListFor(model => model.rel_measure_type_id, new SelectList(Model.MeasureTypes, "measure_type_id", "measure_type_label"), new {@disabled="disabled"})
                    @Html.DropDownListFor(model => model.rel_currency_id, new SelectList(Model.Currencies, "currency_id", "currency_label"), String.Empty, new {@disabled="disabled"})
                    @Html.TextBoxFor(model => model.rel_return_value, new { @disabled = "disabled" })
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.return_benchmark_id)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.return_benchmark_id, new SelectList(Model.Benchmarks, "benchmark_id", "benchmark_label"), String.Empty, new {@disabled="disabled"})

                </div>
            </td>
        </tr>
    </table>
</fieldset>

<!-- Comments ------------------------------------- -->
<fieldset class="tgroup">
    <legend class="trade_group">Trade Comments</legend>
    <table>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.comments)
                </div>

            </td>
            <td>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.Comment.comment_label, new { rows = 5, columns = 50 , @disabled="disabled"})
                </div>
            </td>
        </tr>
    </table>
</fieldset>

<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.trade_id }) |*@
    @Html.ActionLink("Back to List", "Index")
</p>

<script src="~/Scripts/knockout-3.0.0.js"></script>
<script src="~/Scripts/app/viewmodels/tradeViewModel.js"></script>

@{
    var jsModel = JsonConvert.SerializeObject(Model, Formatting.Indented,
        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.Objects });
}
<script type="text/javascript">
    var model = @Html.Raw(jsModel);
    console.dir(jsModel);
</script>